<!--Games-->
<?xjs

    var ftelnet = webRequire('ftelnet.js', 'ftelnet');

    if (typeof settings.xtrn_blacklist === 'string') {
        settings.xtrn_blacklist = settings.xtrn_blacklist.toLowerCase().split(',');
    } else {
        settings.xtrn_blacklist = [];
    }

    var xtrn = {};
    xtrn_area.sec_list.forEach(function (sec) {
        if (!sec.can_access || sec.prog_list.length < 1) return;
        if (settings.xtrn_blacklist.indexOf(sec.code.toLowerCase()) > -1) return;
        var x = [];
        sec.prog_list.forEach(function (prog) {
            if (!prog.can_access || !prog.can_run) return;
            if (settings.xtrn_blacklist.indexOf(prog.code.toLowerCase()) > -1) return;
            x.push({ c : prog.code, n : prog.name });
        });
        if (x.length > 0) xtrn[sec.name] = x;
    });

?>

<style>.fTelnetStatusBar { display: none; }</style>

<a name="fTelnet"></a>
<div id="fTelnetContainer" class="fTelnetContainer" style="margin-bottom:1em;"></div>

<div id="xtrn-list" class="list-group">
	<div id="xtrn-list-template" class="list-group-item" hidden>
		<h4></h4>
		<ul class="nav nav-pills">
			<li id="xtrn-item-template" role="presentation" hidden>
			<a href="#fTelnet"></a>
			</li>
		</ul>
	</div>
</div>

<script id="fTelnetScript" src="<?xjs write(ftelnet.getURL()); ?>"></script>
<script type="text/javascript">

window.addEventListener('load', () => {
		const wsp = <? write(settings.wsp || ftelnet.getWSPort()); ?>;
		const wssp = <? write(settings.wssp || ftelnet.getWSSPort()); ?>;
		const Options = new fTelnetOptions();
		Options.BareLFtoCRLF = false;
		Options.BitsPerSecond = 57600;
		Options.ConnectionType = 'rlogin';
		Options.Emulation = 'ansi-bbs';
		Options.Enter = '\r';
		Options.Font = 'CP437';
		Options.ForceWss = false;
		Options.Hostname = '<? write(http_request.vhost); ?>';
		Options.LocalEcho = false;
		Options.Port = location.protocol == 'https:' ? wssp : wsp;
		Options.RLoginClientUsername = '<? write(user.security.password); ?>';
		Options.RLoginServerUsername = '<? write(user.alias); ?>';
		Options.ScreenColumns = 80;
		Options.ScreenRows = 25;
		Options.SplashScreen = Options.SplashScreen = '<? write(ftelnet.getSplash()); ?>';
		Options.WebSocketUrlPath = '?Port=<? write(ftelnet.getRloginPort()); ?>';
		window.fTelnet = new fTelnetClient('fTelnetContainer', Options);
        fTelnet.OnConnectionClose = () => window.location.reload();
	});

    async function launchXtrn(code) {
        await v4_get('./api/system.ssjs?call=set-xtrn-intent&code=' + code);
        fTelnet._Options.RLoginTerminalType = 'xtrn=' + code;
        fTelnet.Connect();
    }

    var xtrn = <? write(JSON.stringify(xtrn)); ?>;
    Object.entries(xtrn).forEach(([k, v]) => {
        const elem = document.getElementById('xtrn-list-template').cloneNode(true);
        elem.querySelector('h4').innerText = k;
        const ul = elem.querySelector('ul');
        v.forEach(e => {
            const li = document.getElementById('xtrn-item-template').cloneNode(true);
            const a = li.querySelector('a');
            a.innerText = e.n;
            a.onclick = () => launchXtrn(e.c);
            ul.appendChild(li);
            li.removeAttribute('hidden');
        });
        elem.appendChild(ul);
        document.getElementById('xtrn-list').appendChild(elem);
        elem.removeAttribute('hidden');
    });

    <? if (http_request.query.code !== undefined && xtrn_area.prog[http_request.query.code[0]] !== undefined && xtrn_area.prog[http_request.query.code[0]].can_access) { ?>
        window.addEventListener('load', () => launchXtrn('<? write(http_request.query.code[0]); ?>'));
    <? } ?>
</script>
