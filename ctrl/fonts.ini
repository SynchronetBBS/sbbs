; SyncTERM (CTerm) Loadable and Alternative Fonts Configuration
; (used by exec/load/fonts.js)

; ********************
; Character Dimensions
; ********************
; The supported font character/glyph heights are: 8, 14, or 16 pixels.
; The supported font character widths are always 8 pixels.

; These are standard IBM CGA/VGA text mode character dimensions.

; The utilized character height depends on the terminal's screen mode:
; 8h fonts are used for screen modes with 35 or more lines
; 14h fonts are used for screen modes with 28 and 34 lines
; 16h fonts are used for screen modes with 30 lines or fewer than 28 lines

; When a user's terminal has a 'status bar', the above lines are decremented by
; one but the character heights still apply (e.g. a 33 line terminal will use a
; 14h font).

; Since 80x25/24 is the most common BBS terminal mode, 8x16 fonts are the most
; commonly used/applicable.

; **********
; Font Slots
; **********

; The root section here is mainly for associating names with font slot numbers.
; Synchronet uses the highest slot numbers for dynamically loading XBin/XBimage
; fonts - so do not assign or use slots 252 through 255.
; SyncTERM currently preserves slots 0-42 for hard-coded pre-defined fonts,
; so these slot are not available for BBS-loaded fonts and its possible that
; future versions of SyncTERM may have more hard-coded fonts. So the "safe"
; slot numbers to use for BBS-loaded fonts is the 100-250 range, which
; "should" be plenty.

; Hard-coded Fonts
; ----------------
; SyncTERM 1.0 has the following hard-coded fonts/slots
; (with the supported character heights commented at the end of each line).
; You probably don't need to change anything in this section.

cp437       =   0  - Codepage 437 English                               ;16,14,8
cp1251      =   1  - Codepage 1251 Cyrillic, (swiss)                    ;16
koi8-r      =   2  - Russian koi8-r                                     ;16,14,8
iso-8859-2  =   3  - ISO-8859-2 Central European                        ;16,14,8
balticwide  =   4  - ISO-8859-4 Baltic wide (VGA 9bit mapped)           ;16
cp886c      =   5  - Codepage 866 (c) Russian                           ;16
iso-8859-9  =   6  - ISO-8859-9 Turkish                                 ;16
kaik8       =   7  - haik8 codepage (use only with armscii8 screenmap)  ;16,14,8
iso-8859-8  =   8  - ISO-8859-8 Hebrew                                  ;16,14,8
koi8-u      =   9  - Ukrainian font koi8-u                              ;16,14,8
iso-8859-15 =   10 - ISO-8859-15 West European, (thin)                  ;16
baltic      =   11 - ISO-8859-4 Baltic (VGA 9bit mapped)                ;16,14,8
koi8-rb     =   12 - Russian koi8-r (b)                                 ;16
iso-8859-4w =   13 - ISO-8859-4 Baltic wide                             ;16
iso-8859-5  =   14 - ISO-8859-5 Cyrillic                                ;16,14,8
armscii-8   =   15 - ARMSCII-8 Character set                            ;16,14,8
iso-8859-15 =   16 - ISO-8859-15 West European                          ;16,14,8
cp850thin   =   17 - Codepage 850 Multilingual Latin I, (thin)          ;16,8
cp850       =   18 - Codepage 850 Multilingual Latin I                  ;16,14,8
cp885thin   =   19 - Codepage 885 Norwegian, (thin)                     ;16,8
cp1251      =   20 - Codepage 1251 Cyrillic                             ;16,14,8
iso-8859-7  =   21 - ISO-8859-7 Greek                                   ;16,14,8
koi8-rc     =   22 - Russian koi8-r (c)                                 ;16
iso-8859-4  =   23 - ISO-8859-4 Baltic                                  ;16,14,8
iso-8859-1  =   24 - ISO-8859-1 West European                           ;16,14,8
cp886       =   25 - Codepage 866 Russian                               ;16,14,8
cp437thin   =   26 - Codepage 437 English, (thin)                       ;16,8
cp886b      =   27 - Codepage 866 (b) Russian                           ;16  
cp885       =   28 - Codepage 885 Norwegian                             ;16,14,8
cp886u      =   29 - Ukrainian font cp866u                              ;16,14,8
iso-8859-1t =   30 - ISO-8859-1 West European, (thin)                   ;16
cp1131      =   31 - Codepage 1131 Belarusian, (swiss)                  ;16
c64upper    =   32 - Commodore 64 (UPPER)                               ;16,8
c64lower    =   33 - Commodore 64 (Lower)                               ;16,8
c128upper   =   34 - Commodore 128 (UPPER)                              ;16,8
c128lower   =   35 - Commodore 128 (Lower)                              ;16,8
atari       =   36 - Atari                                              ;16,8
potnoodle   =   37 - P0T NOoDLE (Amiga)                                 ;16,14
mosoul      =   38 - mO'sOul (Amiga)                                    ;16,8
microknight+=   39 - MicroKnight Plus (Amiga)                           ;16
topaz+      =   40 - Topaz Plus (Amiga)                                 ;16
microknight =   41 - MicroKnight (Amiga)                                ;16,14,8
topaz       =   42 - Topaz (Amiga)                                      ;16,14

; BBS-Loadable Fonts
; ------------------
; These font slot numbers (in the 100-250) range are available for BBS use.
;
; We are just naming the slot numbers here for later convenient reference.
; You could assign the same slot number to multiple fonts, but then you could
; not have more than one of those fonts "active" at the same time. There are
; plenty of available slot numbers, so we assign a unique slot for every
; loadable font, just in case you want more than one active simultaneously (and
; you probably will).
;
; A single font may have a version/file for more than one character height.
; The supported character heights are commented at the end of each line.
;
; Feel free to add more fonts to this section as you add/discover them.

antique     =   100 ;16,14
backward    =   101 ;16
bigserif    =   102 ;16
block       =   103 ;16
bold        =   104 ;16,14,8
broadway    =   105 ;16
computer    =   106 ;16,14
courier     =   107 ;16,14
deco        =   108 ;16
digital     =   109 ;16
empty       =   110 ;16
eurotype    =   111 ;16
frankfurt   =   112 ;14
future      =   113 ;16
georgian    =   114 ;14
gothical    =   115 ;16
greek       =   116 ;16
hebrew      =   117 ;16
hearst      =   118 ;16,14
ice         =   119 ;16
inverted    =   120 ;16
italics     =   121 ;16
jasnew      =   122 ;16
lcd         =   123 ;16
lore        =   124 ;16
magic       =   125 ;16
medieval    =   126 ;16
modern      =   127 ;16
oldenglish  =   128 ;14
reverse     =   129 ;16
roman1      =   130 ;16
roman2      =   131 ;16
sans-serif  =   132 ;16
scott       =   133 ;16
scribble    =   134 ;16
script      =   135 ;16,14
smallcaps   =   136 ;14
strange     =   137 ;14
stretch     =   138 ;16
super       =   139 ;16
swiss       =   140 ;16
tekton      =   141 ;16
thin        =   142 ;16
tiny        =   143 ;8

; Set 'wantblink=true' globally if blinking text is desired for all fonts,
; in all conditions.  When wantblink is not set to 'true' here, the blink
; attribute will be disabled on the terminal when displaying text using any
; blink or highblink styles (by default) in the Font Sections defined below.
; 'wantblink' can also be enabled on a per-font basis (in Font Sections).
wantblink   = true

; *****************
; Filename Sections
; *****************

; These filenames are only needed if the base filename does not match the name
; we assigned to the slot (above). So mostly, we don't need these sections
; so long as we just use names that match the base filenames of the font files.
;
; The Filename Section names are "filenames:<charheight>" where <charheight>
; is the relevant font character height, in pixels.

; Font files (in the Synchronet ctrl/fonts directory):
; 8x8 are in *.f8 files, 8x14 are in *.f14 files, and 8x16 are in *.f16 files.

[filenames:16]
lore=lorefont.f16

[filenames:14]
oldenglish=oldeng.f14

[filenames:8]

; ***********************
; Active Fonts and Styles
; ***********************

; 200+ fonts may be loaded into the terminal (SyncTERM) at any time, but only 4
; fonts may be "active" (visibly used) at any given time. Which of the fonts are
; visibly used for any particular text is determined by the combination of the
; character display attributes or styles:
;   1: normal
;   2: high-intensity (bright)
;   3: normal-blinking
;   4: high-intensity blinking
;
; These 4 styles are referred to later as normal, high, blink, and highblink.
;
; Since there are only 4 available styles, there are only 4 possible fonts at
; any given time. However, the BBS may change the font (slot) used for a
; particular text style at any time and the characters on the terminal screen
; which have been displayed in that style will change to use the new font,
; immediately. So the BBS may drastically affect the appearance of all the
; characters (text and "graphics") displayed on the remote terminal without
; re-sending any of those characters!

; A 'requirements' key may be set to a valid Access Requirement String (ARS)
; both globally (i.e. in the root section before any Font Sections are
; defined, towards the top of this file) and within any Font Section.  Users
; not meeting the specified requirements will not receive the font change(s).
; If specified, both the global and per-font requirements must be met for a
; font to apply to a user.

; ****************************
; Loading and Activating Fonts
; ****************************

; Within each Font Section, there are 2 types of 'key=value' assignments:
; Font Loads (data transfers) and Font Activations
;
; Font Loads use the form: '<slot>=<filename>'
;       where <slot> is either a font slot number or slot name (from above)
;       and <filename> is the name of a file from the BBS's fonts directory.
;       This syntax is used when you want to pre-load a font and not immediately
;       activate it; you probably don't need to use this syntax.
;
; Font Activations use the form: '<style>=<slot>'
;       where <style> is one of: 'normal', 'high', 'blink', or 'highblink'
;       (describes the attribute combination which will use the activated font)
;       and <slot> is either a font slot number or slot name (from above).
;       The font will be loaded (transferred to the terminal) if it has not
;       already been loaded at any time during this connection/session, so an
;       activation assignment implies: "load the font if it hasn't already".
;       With this scheme, fonts may be activated, deactivated, and reactivated
;       later without re-sending (loading into the terminal) the font data,
;       which can cause a noticeable pause.

; *************
; Font Sections
; *************

; Font Sections are named with the following form: '[<key>:<char>]'
; where <key> is a keyword used by the BBS to load and/or activate one or more
; fonts relevant to a particular use of the BBS (e.g. door game) and
; <char> is the character height, in pixels, which corresponds with the user's
; terminal screen length (see above descriptions, but 16 is most common).

; Set 'wantblink=true' in a font section if blinking/flashing text is desired.
; This will result in the blink attribute remaining enabled on the terminal
; for the configured blink/highblink styles (if any) in a font section.
; Without 'wantblink' enabled, the blink attribute will be disabled on the
; terminal when displaying text using the blink or highblink style.

; Default Sections
; ----------------
; The 'default' key/sections are used to define the set of fonts to be loaded
; and activated during logon or answer, if so configured, and potentially
; re-activated several times during a BBS user session/connection. The 'default'
; fonts will be re-activated when the BBS user returns from running an external
; program or loadable module that might have changed the active fonts.

[default:16]
normal=cp437
high=courier
blink=gothical
highblink=computer

[default:14]
normal=cp437
high=courier
blink=oldenglish
highblink=computer

[default:8]
normal=cp437
high=bold

; Door Sections
; -------------
; Each BBS external online program (e.g. door game) may have its own desired
; fonts and some programs may even have customized fonts made just for that
; game (e.g. LORE).
; 
; These sections are named with the form: '[xtrn:<code>:<char>]
; where <code> is the external program's Internal Code (as configured in SCFG)
; and <char> is the relevant character height.
;
; Note: you must utilize xtrn_sec.js rev 1.18 or later for this feature:

[xtrn:lore:16]
normal=lore
high=lore
blink=lore
highblink=lore

[xtrn:lord:16]
normal=lore

[xtrn:lord:14]
normal=oldenglish

; Other Sections
; --------------
; Any other BBS script or module may load and/or activate fonts referenced
; in this file (using "load('fonts'.js', 'modname')"). The author or
; documentation associated with those modules should instruct you of the section
; name to use to define the utilized fonts, when applicable.

; End of file
