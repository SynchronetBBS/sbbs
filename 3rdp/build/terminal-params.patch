diff -ur ../tmp2/cryptlib.h ./cryptlib.h
--- ../tmp2/cryptlib.h	2021-03-13 02:55:28.589948000 -0500
+++ ./cryptlib.h	2021-03-13 02:56:03.550287000 -0500
@@ -1222,6 +1222,11 @@
 	CRYPT_SESSINFO_SSL_EAPKEY,		/* SSL/TLS EAP key */
 	CRYPT_SESSINFO_TSP_MSGIMPRINT,	/* TSP message imprint */
 
+	/* Terminal attributes */
+	CRYPT_SESSINFO_SSH_TERMINAL,	/* TERM string sent to remote */
+	CRYPT_SESSINFO_SSH_WIDTH,	/* Terminal width */
+	CRYPT_SESSINFO_SSH_HEIGHT,	/* Terminal height */
+
 	/* Used internally */
 	CRYPT_SESSINFO_LAST, CRYPT_USERINFO_FIRST = 7000,
 
diff -ur ../tmp2/kernel/attr_acl.c ./kernel/attr_acl.c
--- ../tmp2/kernel/attr_acl.c	2021-03-13 02:55:42.258577000 -0500
+++ ./kernel/attr_acl.c	2021-03-13 02:56:03.603279000 -0500
@@ -3768,6 +3768,25 @@
 		MKPERM_TSP( xWD_xWD ),
 		ROUTE( OBJECT_TYPE_SESSION ), &objectCtxHash ),
 
+	MKACL_S(	/* SSH client: Read/write */
+		CRYPT_SESSINFO_SSH_TERMINAL,
+		ST_NONE, ST_NONE, ST_SESS_SSH, 
+		0xffffffff /*MKPERM_SSH_EXT( RWD_RWD )*/,
+		ROUTE( OBJECT_TYPE_SESSION ),
+		RANGE( 1, CRYPT_MAX_TEXTSIZE ) ),
+	MKACL_N(	/* SSH client: Read/write */
+		CRYPT_SESSINFO_SSH_WIDTH,
+		ST_NONE, ST_NONE, ST_SESS_SSH, 
+		0xffffffff /*MKPERM_SSH_EXT( RWD_RWD )*/,
+		ROUTE( OBJECT_TYPE_SESSION ),
+		RANGE( 1, 800 ) ),
+	MKACL_N(	/* SSH client: Read/write */
+		CRYPT_SESSINFO_SSH_HEIGHT,
+		ST_NONE, ST_NONE, ST_SESS_SSH, 
+		0xffffffff /*MKPERM_SSH_EXT( RWD_RWD )*/,
+		ROUTE( OBJECT_TYPE_SESSION ),
+		RANGE( 1, 800 ) ),
+
 	MKACL_END(), MKACL_END()
 	};
 #endif /* USE_SESSIONS */
diff -ur ../tmp2/session/sess_attr.c ./session/sess_attr.c
--- ../tmp2/session/sess_attr.c	2021-03-13 02:55:28.307665000 -0500
+++ ./session/sess_attr.c	2021-03-13 02:56:30.118602000 -0500
@@ -565,6 +565,8 @@
 								   SESSION_FLAG_ISOPEN ) ? TRUE : FALSE;
 			return( CRYPT_OK );
 
+		case CRYPT_SESSINFO_SSH_HEIGHT:
+		case CRYPT_SESSINFO_SSH_WIDTH:
 		case CRYPT_SESSINFO_SERVER_PORT:
 		case CRYPT_SESSINFO_CLIENT_PORT:
 			{
@@ -639,6 +641,7 @@
 			return( CRYPT_ERROR_NOTFOUND );
 			}
 
+		case CRYPT_SESSINFO_SSH_TERMINAL:
 		case CRYPT_SESSINFO_USERNAME:
 		case CRYPT_SESSINFO_PASSWORD:
 			/* If the session was resumed from cached information then the
@@ -797,6 +800,13 @@
 			return( status );
 			}
 
+		case CRYPT_SESSINFO_SSH_WIDTH:
+			return( addSessionInfo( sessionInfoPtr,
+									CRYPT_SESSINFO_SSH_WIDTH, value ) );
+		case CRYPT_SESSINFO_SSH_HEIGHT:
+			return( addSessionInfo( sessionInfoPtr,
+									CRYPT_SESSINFO_SSH_HEIGHT, value ) );
+
 		case CRYPT_SESSINFO_SERVER_PORT:
 			/* If there's already a network socket specified then we can't 
 			   set a port as well */
@@ -954,6 +964,9 @@
 			return( addCredential( sessionInfoPtr, data, dataLength, 
 								   attribute ) );
 
+		case CRYPT_SESSINFO_SSH_TERMINAL:
+		case CRYPT_SESSINFO_SSH_WIDTH:
+		case CRYPT_SESSINFO_SSH_HEIGHT:
 		case CRYPT_SESSINFO_SERVER_FINGERPRINT_SHA1:
 			/* Remember the value */
 			return( addSessionInfoS( sessionInfoPtr, attribute, data, 
@@ -1016,6 +1029,7 @@
 			sessionInfoPtr->writeTimeout = CRYPT_ERROR;
 			return( CRYPT_OK );
 
+		case CRYPT_SESSINFO_SSH_TERMINAL:
 		case CRYPT_SESSINFO_USERNAME:
 		case CRYPT_SESSINFO_PASSWORD:
 		case CRYPT_SESSINFO_SERVER_NAME:
diff -ur ../tmp2/session/ssh2_msgc.c ./session/ssh2_msgc.c
--- ../tmp2/session/ssh2_msgc.c	2021-03-13 02:55:27.112993000 -0500
+++ ./session/ssh2_msgc.c	2021-03-13 02:56:03.671662000 -0500
@@ -448,6 +448,12 @@
 												CHANNEL_WRITE );
 	int packetOffset, status;
 
+	MESSAGE_DATA	term;
+	BYTE termString[ CRYPT_MAX_TEXTSIZE + 8 ];
+	int value;
+
+	term.data=termString;
+	term.length=CRYPT_MAX_TEXTSIZE;
 	assert( isWritePtr( sessionInfoPtr, sizeof( SESSION_INFO ) ) );
 	assert( isWritePtr( stream, sizeof( STREAM ) ) );
 
@@ -547,9 +553,18 @@
 	writeUint32( stream, channelNo );
 	writeString32( stream, "pty-req", 7 );
 	sputc( stream, 0 );					/* No reply */
-	writeString32( stream, "xterm", 5 );/* Generic */
-	writeUint32( stream, 80 );
-	writeUint32( stream, 48 );			/* 48 x 80 (24 x 80 is so 1970s) */
+	if( cryptStatusError( status = getSessionAttributeS( sessionInfoPtr, &term, CRYPT_SESSINFO_SSH_TERMINAL) ) )
+		writeString32( stream, "xterm", 5 );/* Generic */
+	else
+		writeString32( stream, term.data, term.length );/* Generic */
+	if( cryptStatusError( getSessionAttribute( sessionInfoPtr, &value, CRYPT_SESSINFO_SSH_WIDTH ) ) )
+		writeUint32( stream, 80 );
+	else
+		writeUint32( stream, value);
+	if( cryptStatusError( getSessionAttribute( sessionInfoPtr, &value, CRYPT_SESSINFO_SSH_HEIGHT ) ) )
+		writeUint32( stream, 48 );		/* 48 x 80 (24 x 80 is so 1970s) */
+	else
+		writeUint32( stream, value);
 	writeUint32( stream, 0 );
 	writeUint32( stream, 0 );			/* No graphics capabilities */
 	status = writeUint32( stream, 0 );	/* No special TTY modes */
