--- ./session/ssh2_authsvr.c.orig	2024-10-31 00:50:23.133300000 -0400
+++ ./session/ssh2_authsvr.c	2024-10-31 00:50:23.469147000 -0400
@@ -969,6 +969,21 @@
 		{
 		sMemDisconnect( &stream );
 
+		if( GET_FLAG( sessionInfoPtr->protocolFlags, SSH_PFLAG_DUMMYUSERAUTH ) )
+		{
+			status = sendResponseSuccess( sessionInfoPtr );
+			if( cryptStatusError( status ) )
+				return( status );
+			CFI_CHECK_UPDATE( "sendResponseSuccess" );
+			ENSURES( CFI_CHECK_SEQUENCE_6( "readAuthPacketSSH2", 
+										   "checkAuthPacketSSH2", 
+										   "checkQueryValidity", "readAuthInfo", 
+										   "findSessionInfoEx",
+										   "sendResponseSuccess" ) );
+			*userAuthInfo = USERAUTH_SUCCESS;
+			return( CRYPT_OK );
+		}
+
 		/* Tell the client which authentication methods can continue */
 		status = sendResponseFailureInfo( sessionInfoPtr, allowPubkeyAuth );
 		if( cryptStatusError( status ) )
--- ./kernel/attr_acl.c.orig	2024-10-31 00:50:23.162378000 -0400
+++ ./kernel/attr_acl.c	2024-10-31 00:50:23.473375000 -0400
@@ -3931,7 +3931,7 @@
 		ROUTE( OBJECT_TYPE_SESSION ), RANGE( 2, CRYPT_MAX_TEXTSIZE ) ),
 	MKACL_N(	/* SSH protocol options */
 		CRYPT_SESSINFO_SSH_OPTIONS,
-		ST_NONE, ST_NONE, ST_SESS_SSH, 
+		ST_NONE, ST_NONE, ST_SESS_SSH | ST_SESS_SSH_SVR, 
 		MKPERM_SESSIONS( Rxx_RWx ),
 		ROUTE( OBJECT_TYPE_SESSION ),
 		RANGE( CRYPT_SSHOPTION_NONE, CRYPT_SSHOPTION_MAX ) ),
