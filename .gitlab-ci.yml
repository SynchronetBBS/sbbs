.rules:
  rules:
    - changes:
      - src/**/*
      - 3rdp/**/*
      - ctrl/text.dat
      - xtrn/**/{GNUm,M}akefile
      - xtrn/**/*.{c,h,cpp,hpp,mk}

.spidermonkey:
  script:
    - cd 3rdp/build
    - gmake ${BUILD_FLAGS} libmozjs
  artifact:
    name: "spidermonkey-${OSP}"
    paths:
      - "3rdp/*.*.*.release/mozjs"
  rules:
    - if: $NO_JAVASCRIPT == "yes"
      when: never

.cryptlib:
  script:
    - cd 3rdp/build
    - gmake ${BUILD_FLAGS} cryptlib
  artifact:
    name: "cryptlib-${OSP}"
    paths:
      - "3rdp/*.*.*.release/cl"

.xpdev:
  script:
    - cd src/xpdev
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "xpdev-${OSP}"
    paths:
      - "src/xpdev/*.*.*.lib.release*"
  needs:
    - job: xpdev-${OS}

.encode:
  script:
    - cd src/encode
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "encode-${OSP}"
    paths:
      - "src/encode/*.*.*.lib.release*"
  needs:
    - job: xpdev-${OS}

.hash:
  script:
    - cd src/hash
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "hash-${OSP}"
    paths:
      - "src/hash/*.*.*.lib.release*"

.ciolib:
  script:
    - cd src/ciolib
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "ciolib-${OSP}"
    paths:
      - "src/ciolib/*.*.*.lib.release*"
  needs:
    - job: xpdev-${OS}
    - job: hash-${OS}
    - job: encode-${OS}

.sftp:
  script:
    - cd src/sftp
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "sftp-${OSP}"
    paths:
      - "src/sftp/*.*.*.lib.release*"
  needs:
    - job: xpdev-${OS}

.smblib:
  script:
    - cd src/smblib
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "smblib-${OSP}"
    paths:
      - "src/smblib/*.*.*.lib.release*"
  needs:
    - job: xpdev-${OS}
    - job: hash-${OS}
    - job: encode-${OS}

.uifc:
  script:
    - cd src/uifc
    - gmake ${BUILD_FLAGS}
  artifact:
    name: "uifc-${OSP}"
    paths:
      - "src/uifc/*.*.*.lib.release*"
  needs:
    - job: xpdev-${OS}
    - job: ciolib-${OS}

.sbbs:
  script:
    - cd src/sbbs3
    - gmake ${BUILD_FLAGS} all
  artifacts:
    name: "sbbs-${OSP}"
    paths:
      - "src/sbbs3/*.exe.release/*"
      - "src/sbbs3/*.lib.release/*"
      - "src/sbbs3/*/*.exe.release/*"
  needs:
    - job: ciolib-${OS}
    - job: cryptlib-${OS}
    - job: encode-${OS}
    - job: hash-${OS}
    - job: sftp-${OS}
    - job: smblib-${OS}
    - job: spidermonkey-${OS}
    - job: uifc-${OS}
    - job: xpdev-${OS}
  rules:
    - if: $CROSS_PLATFORM == "yes"
      when: never

.syncterm:
  script:
    - cd src/syncterm
    - gmake ${BUILD_FLAGS}
  artifacts:
    name: "syncterm-${OSP}"
    paths:
      - "src/syncterm/*.exe.release/*"
  needs:
    - job: ciolib-${OS}
    - job: cryptlib-${OS}
    - job: encode-${OS}
    - job: hash-${OS}
    - job: sftp-${OS}
    - job: uifc-${OS}
    - job: xpdev-${OS}

.syncdraw:
  script:
    - cd src/syncdraw
    - gmake ${BUILD_FLAGS}
  artifacts:
    name: "syncdraw-${OSP}:
    paths:
      - "src/syncdraw/*.exe.release/*"
  needs:
    - job: ciolib-$(OS)
    - job: xpdev-$(OS)

.jsdoor:
  script:
    - cd src/sbbs3
    - gmake ${BUILD_FLAGS} jsdoor
  artifacts:
    name: "jsdoor-${OSP}"
    paths:
      - "src/sbbs3/*.exe.release/*"
  needs:
    - job: ciolib-${OS}
    - job: cryptlib-${OS}
    - job: encode-${OS}
    - job: hash-${OS}
    - job: sftp-${OS}
    - job: smblib-${OS}
    - job: spidermonkey-${OS}
    - job: uifc-${OS}
    - job: xpdev-${OS}

.js-testsuite:
  script:
    - "src/sbbs3/*.exe.release/jsdoor exec/tests/test.js"
  dependencies:
    - jsdoor-${OS}
  rules:
    - if: $CROSS_PLATFORM == "yes"
      when: never

.sexpots:
  script:
    - cd src/sexpots
    - gmake ${BUILD_FLAGS}
  artifacts:
    name: "sexpots-${OSP}"
    paths:
      - "src/sexpots/*.exe.release/*"
  needs:
    - job: xpdev-${OS}

include:
  - local: '.gitlab-ci-unix.yml'
    inputs:
      os: 'openbsd'
      platform: 'amd64'
      tagname: 'OpenBSD'
      cross_platform: 'no'
      build_flags: 'RELEASE=1'
      no_javascript: 'no'
  - local: '.gitlab-ci-unix.yml'
    inputs:
      os: 'netbsd'
      platform: 'amd64'
      tagname: 'NetBSD'
      cross_platform: 'no'
      build_flags: 'RELEASE=1'
      no_javascript: 'no'
  - local: '.gitlab-ci-unix.yml'
    inputs:
      os: 'freebsd'
      platform: 'amd64'
      tagname: 'FreeBSD'
      cross_platform: 'no'
      build_flags: 'RELEASE=1'
      no_javascript: 'no'
  - local: '.gitlab-ci-unix.yml'
    inputs:
      os: 'mingw32'
      platform: 'x86'
      tagname: 'FreeBSD'
      cross_platform: 'yes'
      build_flags: 'AR=mingw32-ar AS=mingw32-as CC=mingw32-gcc CXX=mingw32-g++ RANLIB=mingw32-ranlib RELEASE=1 STATIC_CRYPTLIB=yes USE_SDL=1 VERBOSE=please WINDRES=mingw32-windres'
      no_javascript: 'yes'
  - local: '.gitlab-ci-unix.yml'
    inputs:
      os: 'raspian'
      platform: 'aarch64'
      tagname: 'RaspberryPi'
      cross_platform: 'no'
      build_flags: 'RELEASE=1'
      no_javascript: 'yes'
# NOTE: linux-sbbs builds gtkutils, so that would need to be fiddled with
#  - local: '.gitlab-ci-unix.yml'
#    inputs:
#      os: "linux"
#      platform: "x64"
#      tagname: "Linux"
#      cross_platform: "no"
#      build_flags: "RELEASE=1"
#      no_javascript: "no"

sbbs-linux:
  tags: [Linux]
  image: gcc
  stage: build
  extends: .rules
  script:
    - cd src/sbbs3
    - make RELEASE=1 all
    - make RELEASE=1 gtkutils
  artifacts:
    name: sbbs-linux-x64
    paths:
      - "src/sbbs3/*.exe.release/*"
      - "src/sbbs3/*.lib.release/*"
      - "src/sbbs3/*/*.exe.release/*"

smoketest-jsexec-linux:
  tags: [Linux]
  image: gcc
  stage: test
  extends: .rules
  script:
    - cd src/sbbs3
    - export LD_LIBRARY_PATH=$(realpath *.lib.release)
    - "*.exe.release/jsexec -C -c../../ctrl -r 'exit(0)'"
  dependencies: [sbbs-linux]

sexpots-linux:
  tags: [Linux]
  image: gcc
  stage: build
  extends: .rules
  script:
    - cd src/sexpots
    - make RELEASE=1
  artifacts:
    name: sexpots-linux-x64
    paths:
      - "src/sexpots/*.exe.release/*"

syncterm-linux:
  tags: [Linux]
  image: gcc
  stage: build
  extends: .rules
  script:
    - cd src/syncterm
    - make RELEASE=1 PREFIX=/usr dpkg
  artifacts:
    name: syncterm-linux-x64
    paths:
      - "src/syncterm/*.exe.release/*"
      - "src/syncterm/syncterm*.deb"

sbbs-windows:
  tags: [Windows]
  stage: build
  extends: .rules
  script:
    - cd src/xpdev
    - make
    - cd ../../src/sbbs3
    - .\release.bat
    - cd ctrl
    - .\build.bat
    - cd ../chat
    - .\build.bat
    - cd ../useredit
    - .\build.bat
    - cd ../../../xtrn/sbj
    - make
    - cd ../tbd
    - make
  dependencies: []
  artifacts:
    name: sbbs-win32
    paths:
      - "src/sbbs3/*.exe.release/*.exe"
      - "src/sbbs3/*.dll.release/*.dll"
      - "src/sbbs3/*/*.exe.release/*.exe"
      - "src/sbbs3/*/*.exe"
      - "xtrn/*/*.exe"

sexpots-windows:
  tags: [Windows]
  stage: build
  extends: .rules
  script:
    - cd src/sexpots
    - .\release.bat
  artifacts:
    name: sexpots-win32
    paths:
      - "src/sexpots/Release/*.exe"

svdm-windows:
  tags: [Windows]
  stage: build
  extends: .rules
  script:
    - cd src/vdmodem
    - .\release.bat
  artifacts:
    name: svdm-win32
    paths:
      - "src/vdmodem/Release/*.exe"

syncterm-msvc:
  tags: [Windows]
  stage: build
  extends: .rules
  script:
    - cd src/syncterm
    - .\release.bat
  artifacts:
    name: syncterm-msvc
    paths:
      - "src/syncterm/Release/*.exe"

syncdraw-linux:
  tags: [Linux]
  image: gcc
  stage: build
  extends: .rules
  script:
    - cd src/syncdraw
    - make RELEASE=1
  artifacts:
    name: syncdraw-linux-x64
    paths:
      - "src/syncdraw/*.exe.release/*"

jsdoor-linux:
  tags: [Linux]
  image: gcc
  stage: build
  extends: .rules
  script:
    - cd src/sbbs3
    - make RELEASE=1 jsdoor
  artifacts:
    name: jsdoor-linux-x64
    paths:
      - "src/sbbs3/*.exe.release/*"

sbbs-freebsd-noskeeters:
  extends:
    - .freebsd-build
    - .sbbs
  variables:
    BUILDPFLAGS: "RELEASE=1 WITHOUT_MOSQUITTO=1"
