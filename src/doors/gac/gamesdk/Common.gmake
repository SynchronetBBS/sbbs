# Get OS name
gcc_machine := $(findstring mingw32,$(shell ${CC} -dumpmachine))
gcc_w64     := $(findstring w64,$(shell ${CC} -dumpmachine))
gcc_x86_64  := $(findstring x86_64,$(shell ${CC} -dumpmachine))
ifeq ($(gcc_machine),mingw32)
 win	:= yes
 CFLAGS +=      -DMSVCRT_VERSION=0x0800
 ifeq ($(gcc_x86_64),x86_64)
  OS            := Win64
 else
  OS            := Win32
 endif
else
 OS      :=      $(shell uname)
endif

ODOORS_LIB :=	$(SRC_ROOT)$(DIRSEP)odoors$(DIRSEP)libs-${OS}$(DIRSEP)$(LIBPREFIX)ODoors$(LIBFILE)
CFLAGS	+=	$(XPDEV_CFLAGS)
LDFLAGS	+=	$(XPDEV_LDFLAGS)

PACKART_OBJS :=	$(OBJODIR)$(DIRSEP)packart$(OFILE)
PACKART =	$(EXEODIR)$(DIRSEP)packart$(EXE_SUFFIX)$(EXEFILE)

UNPACKART_OBJS :=	$(OBJODIR)$(DIRSEP)unpackart$(OFILE)
UNPACKART =	$(EXEODIR)$(DIRSEP)unpackart$(EXE_SUFFIX)$(EXEFILE)

$(PACKART): $(EXEODIR) $(PACKART_OBJS) $(BUILD_DEPENDS) $(XPDEV_LIB)
	@echo Linking $@
	${QUIET}$(CC) $(LDFLAGS) $(PACKART_OBJS) -o $@ $(XPDEV_LIBS)

$(UNPACKART): $(EXEODIR) $(UNPACKART_OBJS) $(BUILD_DEPENDS) $(XPDEV_LIB)
	@echo Linking $@
	${QUIET}$(CC) $(LDFLAGS) $(UNPACKART_OBJS) -o $@ $(XPDEV_LIBS)
