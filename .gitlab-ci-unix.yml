# TODO: The bad touching needs to be solved in the build system, but
#       maybe there's a way to automate it with needs?
#       Build the various sbbs libraries separately as well.

spec:
  inputs:
    os:
    platform:
    tagname:
    cross_platform:
      default: 'no'
    build_flags:
      default: 'RELEASE=1'
    no_javascript:
      default: 'no'
    has_curses:
      default: 'yes'
    has_gtk:
      default: 'no'
---

".$[[ inputs.os ]]":
  extends: .rules
  tags:
    - "$[[ inputs.tagname ]]"

".$[[ inputs.os ]]-build":
  stage: build
  extends: .$[[ inputs.os ]]

".$[[ inputs.os ]]-test":
  stage: test
  extends: .$[[ inputs.os ]]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [spidermonkey]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd 3rdp/build
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS libmozjs
  artifacts:
    expire_in: 30 mins
    name: "spidermonkey-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "3rdp/*.*.*.release/mozjs"
  rules:
    - if: '"$[[ inputs.no_javascript ]]" == "yes"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd 3rdp/build
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS cryptlib
  artifacts:
    expire_in: 30 mins
    name: "cryptlib-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "3rdp/*.*.*.release/cl"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/xpdev
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "xpdev-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/xpdev/*.*.*.lib.release*"
      - "src/xpdev/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/encode
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "encode-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/encode/*.*.*.lib.release*"
      - "src/encode/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/hash
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "hash-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/hash/*.*.*.lib.release*"
      - "src/hash/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/conio
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "ciolib-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/conio/*.*.*.lib.release*"
      - "src/conio/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [sftp]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sftp
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "sftp-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sftp/*.*.*.lib.release*"
      - "src/sftp/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/smblib
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "smblib-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/smblib/*.*.*.lib.release*"
      - "src/smblib/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/uifc
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "uifc-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/uifc/*.*.*.lib.release*"
      - "src/uifc/*.*.*.obj.release*/*.o*"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [gitinfo]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3
    - touch depend
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS gitinfo
  artifacts:
    expire_in: 30 mins
    name: "gitinfo-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/git_*.h"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [scfg]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/scfg
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch smblib
    - touch ciolib-mt
    - touch uifc
    - touch uifc-mt
    - touch cl
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS GIT=NO
  artifacts:
    expire_in: 30 mins
    name: "scfg-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/scfg/*.exe.release/*"
      - "src/sbbs3/scfg/*.obj.release*/*.o*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [gitinfo]"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [uedit]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/uedit
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch smblib
    - touch ciolib-mt
    - touch uifc
    - touch uifc-mt
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS GIT=NO
  artifacts:
    expire_in: 30 mins
    name: "uedit-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/uedit/*.exe.release/*"
      - "src/sbbs3/uedit/*.obj.release*/*.o*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [gitinfo]"
  rules:
    - if: '"$[[ inputs.has_curses ]]" == "no"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [umonitor]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/umonitor
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch smblib
    - touch ciolib-mt
    - touch uifc
    - touch uifc-mt
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    expire_in: 30 mins
    name: "umonitor-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/umonitor/*.exe.release/*"
      - "src/sbbs3/umonitor/*.obj.release*/*.o*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [utils]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3
    - touch cl
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch smblib
    - touch ciolib-mt
    - touch uifc
    - touch uifc-mt
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS GIT=NO standalone-utils
  artifacts:
    expire_in: 30 mins
    name: "utils-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/*.exe.release/*"
      - "src/sbbs3/*.obj.release*/*.o*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [gitinfo]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [sbbs]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch smblib
    - touch uifc
    - touch uifc-mt
    - touch ciolib-mt
    - touch encode
    - touch hash
    - touch smblib
    - touch sftp-mt
    - touch cl
    - touch scfg/xpdev-mt
    - touch scfg/uifc-mt
    - touch scfg/ciolib-mt
    - touch scfg/smblib
    - touch scfg/encode
    - touch scfg/hash
    - touch scfg/cl
    - touch uedit/smblib
    - touch uedit/uifc-mt
    - touch uedit/ciolib-mt
    - touch uedit/xpdev-mt
    - touch umonitor/ciolib-mt
    - touch umonitor/uifc-mt
    - touch umonitor/xpdev-mt
    - touch umonitor/smblib
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS GIT=NO all
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS jsdoor
  artifacts:
    name: "sbbs-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/*.exe.release/*"
      - "src/sbbs3/*.lib.release/*"
      - "src/sbbs3/*/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [spidermonkey]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [sftp]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [gitinfo]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [scfg]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uedit]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [umonitor]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [utils]"
  rules:
    - if: '"$[[ inputs.no_javascript ]]" == "yes"'
      when: never
    - if: '"$[[ inputs.cross_platform ]]" == "yes"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [syncterm]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/syncterm
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch ciolib-mt
    - touch uifc
    - touch uifc-mt
    - touch sftp-mt
    - touch cl
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "syncterm-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/syncterm/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [sftp]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [syncdraw]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/syncdraw
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch ciolib-mt
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "syncdraw-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/syncdraw/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"

".$[[ inputs.os ]]-$[[ inputs.platform ]] [jsdoor]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch smblib
    - touch ciolib-mt
    - touch uifc
    - touch uifc-mt
    - touch sftp-mt
    - touch cl
    - touch js
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS jsdoor
  artifacts:
    name: "jsdoor-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [ciolib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [sftp]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [spidermonkey]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [uifc]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
  rules:
    - if: '"$[[ inputs.no_javascript ]]" == "yes"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [sexpots]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sexpots
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "sexpots-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sexpots/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"

"$[[ inputs.os ]]-$[[ inputs.platform ]] [gtkchat]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/gtkchat
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch encode
    - touch hash
    - touch smblib
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "gtkchat-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/gtkchat/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [encode]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [hash]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
  rules:
    - if: '"$[[ inputs.has_gtk ]]" == "no"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [gtkmonitor]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/gtkmonitor
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch smblib
    - touch cl
    - touch js
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "gtkmonitor-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/gtkmonitor/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [sbbs]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [spidermonkey]"
  rules:
    - if: '"$[[ inputs.has_gtk ]]" == "no"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [gtkuseredit]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/gtkuseredit
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch smblib
    - touch cl
    - touch js
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "gtkuseredit-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/gtkuseredit/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [spidermonkey]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [sbbs]"
  rules:
    - if: '"$[[ inputs.has_gtk ]]" == "no"'
      when: never
    - !reference [.rules, rules]

"$[[ inputs.os ]]-$[[ inputs.platform ]] [gtkuserlist]":
  extends:
    - .$[[ inputs.os ]]-build
  script:
    - cd src/sbbs3/gtkuserlist
    - touch depend
    - touch xpdev
    - touch xpdev-mt
    - touch smblib
    - touch cl
    - gmake $[[ inputs.build_flags ]] $BUILD_ARGS
  artifacts:
    name: "gtkuserlist-$[[ inputs.os ]]-$[[ inputs.platform ]]"
    paths:
      - "src/sbbs3/gtkuserlist/*.exe.release/*"
  needs:
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [cryptlib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [xpdev]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [smblib]"
    - job: "$[[ inputs.os ]]-$[[ inputs.platform ]] [sbbs]"
  rules:
    - if: '"$[[ inputs.has_gtk ]]" == "no"'
      when: never
    - !reference [.rules, rules]

#########
# Tests #
#########
"js-testsuite [$[[ inputs.os ]]-$[[ inputs.platform ]]]":
  extends:
    - .$[[ inputs.os ]]-test
  script:
    - "src/sbbs3/*.exe.release/jsdoor exec/tests/test.js"
  dependencies:
    - "$[[ inputs.os ]]-$[[ inputs.platform ]] [jsdoor]"
  rules:
    - if: '"$[[ inputs.cross_platform ]]" == "yes"'
      when: never
    - if: '"$[[ inputs.no_javascript ]]" == "yes"'
      when: never
    - !reference [.rules, rules]
